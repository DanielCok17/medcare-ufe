# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
    tags:
      - 'v1*'
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            danielcok17/medcare-ufe
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=branch,suffix={{date 'YYYYMMDD.HHmm'}} # e.g., `main.20210930.1200`
            type=ref,event=tag
            type=semver,pattern={{version}} # e.g., for tag `v1.0.0`
            type=semver,pattern={{major}}.{{minor}} # e.g., `1.0`
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}} # `latest` for every commit to the main branch

      - uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          file: ./build/docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}